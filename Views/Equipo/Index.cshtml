@model List<ASIGNADORIPS.Models.Equipo>
@{
    ViewData["Title"] = "Listado de Equipos";
    Layout = "_Layout";
    var rol = Context.Session.GetString("Rol")?.ToLower().Trim();
}

<div class="d-flex justify-content-start mb-3 gap-2">
    @if (rol == "administrador")
    {
        <!-- Dropdown filtros -->
        <div class="dropdown">
            <button class="btn btn-outline-primary btn-sm dropdown-toggle" type="button" id="dropdownFiltros" data-bs-toggle="dropdown" aria-expanded="false">
                Filtros
            </button>
            <div class="dropdown-menu p-3" style="min-width: 650px;">
                <div class="row">
                    <div class="col-md-4 mb-2">
                        <label class="form-label fw-semibold">Piso</label>
                        <select class="form-select form-select-sm filtro" data-columna="piso">
                            <option value="">Todos</option>
                            @for (int i = 1; i <= 11; i++) { <option value="@i">@i</option> }
                        </select>
                    </div>
                    <div class="col-md-4 mb-2">
                        <label class="form-label fw-semibold">Nombre</label>
                        <input type="text" class="form-control form-control-sm filtro" data-columna="nombre" placeholder="Buscar...">
                    </div>
                    <div class="col-md-4 mb-2">
                        <label class="form-label fw-semibold">Usuario</label>
                        <input type="text" class="form-control form-control-sm filtro" data-columna="usuario" placeholder="Buscar...">
                    </div>
                </div>
            </div>
        </div>

        <!-- Botón Eliminar -->
        <button id="btnEliminarSeleccionados" class="btn btn-danger btn-sm" disabled>
            <i class="mdi mdi-delete"></i> Eliminar seleccionados
        </button>
    }
</div>

<div class="card">
    <div class="card-body p-2">
        <div class="table-responsive">
            <table class="table table-sm table-hover table-bordered align-middle text-nowrap w-100" id="tablaEquipos">
                <thead class="table-dark text-center">
                    <tr>
                        @if (rol == "administrador") { <th><input type="checkbox" id="checkTodos" /></th> }
                        <th>Piso</th>
                        <th>Nombre</th>
                        <th>Cod. Inv.</th>
                        <th>Seg. Red</th>
                        <th>IP</th>
                        <th>User</th>
                        <th>Nombre User</th>
                        <th>Anydesk</th>
                        <th>Detalles</th>
                        @if (rol == "administrador") { <th>Acciones</th> }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var equipo in Model)
                    {
                        <tr data-id="@equipo.Id">
                        @if (rol == "administrador")
                        {
                            <td><input type="checkbox" class="checkFila" value="@equipo.Id" /></td>
                        }
                        <td data-campo="Piso" data-columna="piso">@equipo.Piso</td>
                        <td data-campo="NombreEquipo" data-columna="nombre">@equipo.NombreEquipo</td>
                        <td data-campo="CodigoInventario">@equipo.CodigoInventario</td>
                        <td data-campo="SegmentoRed">@equipo.SegmentoRed</td>
                        <td data-campo="IP">@(equipo.IP?.Split('.').Last())</td>
                        <td data-campo="UsuarioAsignado" data-columna="usuario">@equipo.UsuarioAsignado</td>
                        <td data-campo="NombreUsuario">@equipo.NombreUsuario</td>
                        <td data-campo="Anydesk">@equipo.Anydesk</td>
                        <td class="text-center">
                            <button type="button" class="btn btn-sm btn-info btn-toggle-detalle">
                                <i class="mdi mdi-chevron-down"></i>
                            </button>
                        </td>
                        @if (rol == "administrador")
                        {
                            <td class="text-center">
                                <button class="btn btn-sm btn-primary btn-editar"><i class="mdi mdi-pencil"></i></button>
                                <button class="btn btn-sm btn-success btn-guardar d-none"><i class="mdi mdi-content-save"></i></button>
                                <button class="btn btn-sm btn-secondary btn-cancelar d-none"><i class="mdi mdi-close-circle-outline"></i></button>
                            </td>
                        }
                    </tr>
                        <!-- Fila de detalles ocultos -->
                        <tr class="fila-detalle bg-light d-none" data-id="@equipo.Id">
                            <td colspan="@(rol == "administrador" ? "11" : "10")">
                                <div class="row g-2">
                                    <div class="col-md-3"><strong>Marca:</strong> <span class="detalle" data-campo="Marca">@equipo.Marca</span></div>
                                    <div class="col-md-3"><strong>Procesador:</strong> <span class="detalle" data-campo="Procesador">@equipo.Procesador</span></div>
                                    <div class="col-md-2"><strong>RAM:</strong> <span class="detalle" data-campo="RAM">@equipo.RAM</span></div>
                                    <div class="col-md-2"><strong>Disco:</strong> <span class="detalle" data-campo="Disco">@equipo.Disco</span></div>
                                    <div class="col-md-2"><strong>Windows:</strong> <span class="detalle" data-campo="Windows">@equipo.Windows</span></div>
                                    <div class="col-md-3"><strong>Cod. Monitor:</strong> <span class="detalle" data-campo="CodigoMonitor">@equipo.CodigoMonitor</span></div>
                                    <div class="col-md-3"><strong>Office:</strong> <span class="detalle" data-campo="Office">@equipo.Office</span></div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const checkTodos = document.getElementById("checkTodos");
        const checks = document.querySelectorAll(".checkFila");
        const btnEliminar = document.getElementById("btnEliminarSeleccionados");

        if (checkTodos) {
            checkTodos.addEventListener("change", function () {
                checks.forEach(c => c.checked = checkTodos.checked);
                btnEliminar.disabled = !Array.from(checks).some(c => c.checked);
            });
        }

        if (btnEliminar) {
            checks.forEach(c => {
                c.addEventListener("change", () => {
                    btnEliminar.disabled = !Array.from(checks).some(c => c.checked);
                });
            });

            btnEliminar.addEventListener("click", () => {
                const seleccionados = Array.from(checks).filter(c => c.checked).map(c => parseInt(c.value));
                if (seleccionados.length > 0 && confirm("¿Deseas eliminar los equipos seleccionados?")) {
                    fetch('/Equipo/EliminarMultiples', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(seleccionados)
                    }).then(resp => {
                        if (resp.ok) {
                            seleccionados.forEach(id => {
                                const fila = document.querySelector(`tr[data-id='${id}']`);
                                const filaDetalle = fila?.nextElementSibling;
                                if (fila) fila.remove();
                                if (filaDetalle?.classList.contains("fila-detalle")) filaDetalle.remove();
                            });
                        } else {
                            alert("Error al eliminar los equipos seleccionados.");
                        }
                    });
                }
            });
        }

        document.querySelectorAll(".btn-toggle-detalle").forEach(boton => {
            boton.addEventListener("click", function () {
                const filaPrincipal = this.closest("tr");
                const id = filaPrincipal.dataset.id;
                const filaDetalle = document.querySelector(`.fila-detalle[data-id='${id}']`);
                filaDetalle.classList.toggle("d-none");
                this.querySelector("i").classList.toggle("mdi-chevron-down");
                this.querySelector("i").classList.toggle("mdi-chevron-up");
            });
        });

        document.querySelectorAll("tbody tr").forEach(fila => {
            const btnEditar = fila.querySelector(".btn-editar");
            const btnGuardar = fila.querySelector(".btn-guardar");
            const btnCancelar = fila.querySelector(".btn-cancelar");

            if (!btnEditar) return;

            let valoresOriginales = {};

            btnEditar?.addEventListener("click", () => {
                valoresOriginales = {};
                const celdas = fila.querySelectorAll("td[data-campo]");

                celdas.forEach(celda => {
                    const campo = celda.getAttribute("data-campo");
                    const valor = celda.innerText.trim();
                    valoresOriginales[campo] = valor;
                    celda.innerHTML = `<input type="text" class="form-control form-control-sm" value="${valor}" />`;
                });

                const filaDetalle = document.querySelector(`.fila-detalle[data-id='${fila.dataset.id}']`);
                if (filaDetalle) {
                    filaDetalle.querySelectorAll(".detalle").forEach(span => {
                        const campo = span.getAttribute("data-campo");
                        const valor = span.innerText.trim();
                        valoresOriginales[campo] = valor;
                        span.innerHTML = `<input type="text" class="form-control form-control-sm" value="${valor}" />`;
                    });
                }

                btnEditar.classList.add("d-none");
                btnGuardar.classList.remove("d-none");
                btnCancelar.classList.remove("d-none");
            });

            btnCancelar?.addEventListener("click", () => {
                const celdas = fila.querySelectorAll("td[data-campo]");
                celdas.forEach(celda => {
                    const campo = celda.getAttribute("data-campo");
                    celda.innerText = valoresOriginales[campo];
                });

                const filaDetalle = document.querySelector(`.fila-detalle[data-id='${fila.dataset.id}']`);
                if (filaDetalle) {
                    filaDetalle.querySelectorAll(".detalle").forEach(span => {
                        const campo = span.getAttribute("data-campo");
                        span.innerText = valoresOriginales[campo];
                    });
                }

                btnEditar.classList.remove("d-none");
                btnGuardar.classList.add("d-none");
                btnCancelar.classList.add("d-none");
            });

            btnGuardar?.addEventListener("click", () => {
                const inputs = fila.querySelectorAll("td[data-campo] input");
                const inputsDetalle = document.querySelector(`.fila-detalle[data-id='${fila.dataset.id}']`)?.querySelectorAll("input") || [];

                const data = { id: fila.dataset.id };

                inputs.forEach(input => {
                    const campo = input.closest("td").getAttribute("data-campo");
                    data[campo] = input.value || "---";
                });

                inputsDetalle.forEach(input => {
                    const campo = input.closest("span").getAttribute("data-campo");
                    data[campo] = input.value || "---";
                });

                fetch("/Equipo/UpdateInline", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(data)
                }).then(resp => {
                    if (resp.ok) location.reload();
                    else alert("Error al guardar cambios.");
                });
            });
        });

        // Filtro funcional por columnas con data-columna
        const filtros = document.querySelectorAll(".filtro");
        filtros.forEach(filtro => {
            filtro.addEventListener("input", function () {
                const tabla = document.getElementById("tablaEquipos");
                const filas = tabla.querySelectorAll("tbody tr");

                filas.forEach((fila, index) => {
                    if (fila.classList.contains("fila-detalle")) return;
                    const filaDetalle = fila.nextElementSibling;
                    let mostrar = true;

                    filtros.forEach(f => {
                        const campo = f.getAttribute("data-columna");
                        const valorFiltro = f.value.toLowerCase();
                        const celda = fila.querySelector(`td[data-columna='${campo}']`);

                        if (valorFiltro && celda && !celda.innerText.toLowerCase().includes(valorFiltro)) {
                            mostrar = false;
                        }
                    });

                    fila.style.display = mostrar ? "" : "none";
                    if (filaDetalle && filaDetalle.classList.contains("fila-detalle")) {
                        filaDetalle.style.display = mostrar ? "" : "none";
                    }
                });
            });
        });
    });
</script>
}
