@model List<ASIGNADORIPS.Models.Software>
@{
    ViewData["Title"] = "Listado de Licencias de Software";
    Layout = "_Layout";

    bool algunaAlertaActiva = Model.Any(s => s.Notificar);
    string iconoCampanaGeneral = algunaAlertaActiva ? "mdi-bell-ring" : "mdi-bell-ring-outline";
}

<h2 class="mb-4 d-flex justify-content-between align-items-center">
    Listado de Licencias de Software
    <div>
        <button class="btn btn-sm btn-secondary me-2" data-bs-toggle="modal" data-bs-target="#modalConfigAlertas">
            <i id="iconoCampana" class="mdi @iconoCampanaGeneral"></i> Configurar Alertas
        </button>
        <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#modalAgregarSoftware">
            <i class="mdi mdi-plus"></i> Nueva Licencia
        </button>
    </div>
</h2>

<div class="card">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-sm table-hover table-bordered align-middle text-nowrap">
                <thead class="table-dark text-center">
                    <tr>
                        <th style="width: 40px;"></th>
                        <th>Nombre</th>
                        <th>Descripción</th>
                        <th>Orden Compra</th>
                        <th>Licencias</th>
                        <th>Disponibles</th>
                        <th>Costo</th>
                        <th>Fecha Adq.</th>
                        <th>Expira</th>
                        <th>Alerta</th>
                        <th style="width: 40px;"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var s in Model)
                    {
                        var claseIcono = s.Notificar ? "mdi-bell-ring text-warning" : "mdi-bell-ring-outline text-muted";
                        <tr data-id="@s.Id">
                            <td class="text-center">
                                <button class="btn btn-sm btn-outline-danger rounded-circle btnEliminarLicencia"
                                        data-nombre="@s.Nombre"
                                        data-id="@s.Id"
                                        data-bs-toggle="modal"
                                        data-bs-target="#modalEliminar">
                                    <i class="mdi mdi-delete"></i>
                                </button>
                            </td>
                            <td data-campo="nombre">@s.Nombre</td>
                            <td data-campo="descripcion">@s.Descripcion</td>
                            <td data-campo="ordenCompra">@s.OrdenCompra</td>
                            <td data-campo="cantidadLicencias">@s.CantidadLicencias</td>
                            <td data-campo="licenciasDisponibles">@s.LicenciasDisponibles</td>
                            <td data-campo="costoTotal">$@s.CostoTotal.ToString("N0")</td>
                            <td data-campo="fechaAdquisicion">@s.FechaAdquisicion.ToString("yyyy-MM-dd")</td>
                            <td data-campo="fechaExpiracion">@s.FechaExpiracion.ToString("yyyy-MM-dd")</td>
                            <td class="text-center">
                                <i class="mdi @claseIcono fs-5"></i>
                            </td>
                            <td class="text-center">
                                <button class="btn btn-sm btn-outline-secondary btn-editar"><i class="mdi mdi-pencil"></i></button>
                                <button class="btn btn-sm btn-outline-success btn-guardar d-none"><i class="mdi mdi-check"></i></button>
                                <button class="btn btn-sm btn-outline-warning btn-cancelar d-none"><i class="mdi mdi-close"></i></button>
                            </td>
                        </tr>
                    }
                    </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal Agregar Nueva Licencia -->
<div class="modal fade" id="modalAgregarSoftware" tabindex="-1" aria-labelledby="modalAgregarSoftwareLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content border-primary">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="modalAgregarSoftwareLabel">Agregar Nueva Licencia</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <form id="formAgregarLicencia">
                <div class="modal-body">
                    <div class="mb-2"><label>Nombre</label><input type="text" class="form-control" id="nuevoNombre" required /></div>
                    <div class="mb-2"><label>Descripción</label><input type="text" class="form-control" id="nuevoDescripcion" /></div>
                    <div class="mb-2"><label>Orden de Compra</label><input type="text" class="form-control" id="nuevoOrdenCompra" /></div>
                    <div class="mb-2"><label>Cantidad de Licencias</label><input type="number" class="form-control" id="nuevoCantidad" required /></div>
                    <div class="mb-2"><label>Costo Total</label><input type="number" class="form-control" id="nuevoCosto" required /></div>
                    <div class="mb-2"><label>Fecha de Adquisición</label><input type="date" class="form-control" id="nuevoFechaAdq" required /></div>
                    <div class="mb-2"><label>Fecha de Expiración</label><input type="date" class="form-control" id="nuevoFechaExp" required /></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" id="btnGuardarNuevaLicencia">Guardar</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Editar Licencia -->
<div class="modal fade" id="modalEditar" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Editar Licencia</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <form id="formEditarLicencia">
                    <input type="hidden" id="editId" />
                    <div class="mb-2"><label>Nombre</label><input type="text" class="form-control" id="editNombre" required /></div>
                    <div class="mb-2"><label>Descripción</label><input type="text" class="form-control" id="editDescripcion" /></div>
                    <div class="mb-2"><label>Orden de Compra</label><input type="text" class="form-control" id="editOrdenCompra" /></div>
                    <div class="mb-2"><label>Cantidad de Licencias</label><input type="number" class="form-control" id="editCantidad" /></div>
                    <div class="mb-2"><label>Disponibles</label><input type="number" class="form-control" id="editDisponibles" /></div>
                    <div class="mb-2"><label>Costo Total</label><input type="number" class="form-control" id="editCosto" /></div>
                    <div class="mb-2"><label>Fecha de Adquisición</label><input type="date" class="form-control" id="editFechaAdq" /></div>
                    <div class="mb-2"><label>Fecha de Expiración</label><input type="date" class="form-control" id="editFechaExp" /></div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnGuardarCambios">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Eliminar Licencia -->
<div class="modal fade" id="modalEliminar" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Eliminar Licencia</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <p>Escribe el nombre para confirmar eliminación:</p>
                <input type="text" class="form-control" id="confirmNombreInput" />
                <input type="hidden" id="confirmId" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="btnConfirmarEliminar" disabled>Eliminar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Configurar Alertas -->
<div class="modal fade" id="modalConfigAlertas" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content border-warning">
            <div class="modal-header bg-warning">
                <h5 class="modal-title">Configurar Alertas</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="alertasContainer">Cargando...</div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
document.addEventListener("DOMContentLoaded", function () {
    const btnConfigAlertas = document.querySelector('[data-bs-target="#modalConfigAlertas"]');

    // === Cargar configuración de alertas ===
    btnConfigAlertas?.addEventListener("click", async () => {
        try {
            const container = document.getElementById('alertasContainer');
            container.innerHTML = "Cargando...";

            const res = await fetch('/Software/ObtenerAlertas');
            const alertas = await res.json();

            if (!alertas.length) {
                container.innerHTML = "<div class='text-center text-muted'>No hay alertas configuradas.</div>";
                return;
            }

            let html = `
                <form id="formAlertas">
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered align-middle text-center">
                            <thead class="table-warning">
                                <tr>
                                    <th>Software</th>
                                    <th>¿Notificar?</th>
                                    <th>Días Antes</th>
                                    <th>Correos de Alerta</th>
                                </tr>
                            </thead>
                            <tbody>`;

            alertas.forEach(a => {
                html += `
                    <tr>
                        <td>${a.nombre}</td>
                        <td><input type="checkbox" class="form-check-input" ${a.notificar ? "checked" : ""} data-id="${a.id}" data-field="notificar"></td>
                        <td><input type="number" class="form-control form-control-sm" value="${a.diasAntesNotificar}" data-id="${a.id}" data-field="diasAntes"></td>
                        <td><input type="text" class="form-control form-control-sm" value="${a.correosNotificacion ?? ''}" data-id="${a.id}" data-field="correos"></td>
                    </tr>`;
            });

            html += `</tbody></table></div>
                    <div class="text-end">
                        <button type="button" class="btn btn-warning btn-sm" id="btnGuardarAlertas">Guardar Configuración</button>
                    </div>
                </form>`;

            container.innerHTML = html;

            document.getElementById('btnGuardarAlertas').addEventListener('click', async () => {
                const rows = document.querySelectorAll('#formAlertas tbody tr');
                const data = [];

                for (let row of rows) {
                    const id = row.querySelector('[data-field="notificar"]').dataset.id;
                    const notificar = row.querySelector('[data-field="notificar"]').checked;
                    const dias = parseInt(row.querySelector('[data-field="diasAntes"]').value) || 0;
                    const correos = row.querySelector('[data-field="correos"]').value.trim();

                    if (notificar && (dias <= 0 || correos === "")) {
                        alert("Debes indicar días y correos para todos los softwares con notificación activada.");
                        return;
                    }

                    data.push({
                        id: parseInt(id),
                        notificar,
                        diasAntes: dias,
                        correos
                    });
                }

                const res = await fetch('/Software/ActualizarAlertas', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                if (res.ok) {
                    alert("Configuración de alertas guardada correctamente.");
                    location.reload();
                } else {
                    alert("Error al guardar configuración de alertas.");
                }
            });

        } catch (error) {
            console.error("Error al cargar alertas:", error);
            document.getElementById('alertasContainer').innerHTML = "<div class='text-center text-danger'>Error al cargar alertas.</div>";
        }
    });

    // === Guardar nueva licencia desde el modal ===
    document.getElementById("btnGuardarNuevaLicencia")?.addEventListener("click", async () => {
        const nombre = document.getElementById("nuevoNombre").value.trim();
        const descripcion = document.getElementById("nuevoDescripcion").value.trim();
        const ordenCompra = document.getElementById("nuevoOrdenCompra").value.trim();
        const cantidad = parseInt(document.getElementById("nuevoCantidad").value);
        const costo = parseFloat(document.getElementById("nuevoCosto").value);
        const fechaAdq = document.getElementById("nuevoFechaAdq").value;
        const fechaExp = document.getElementById("nuevoFechaExp").value;

        if (!nombre || isNaN(cantidad) || isNaN(costo) || !fechaAdq || !fechaExp) {
            alert("Por favor completa todos los campos requeridos.");
            return;
        }

        const nuevaLicencia = {
            nombre,
            descripcion,
            ordenCompra,
            cantidadLicencias: cantidad,
            costoTotal: costo,
            fechaAdquisicion: fechaAdq,
            fechaExpiracion: fechaExp,
            notificar: false
        };

        try {
            const res = await fetch("/Software/AgregarSoftware", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(nuevaLicencia)
            });

            if (res.ok) {
                alert("Licencia agregada correctamente.");
                location.reload();
            } else {
                alert("Error al guardar la licencia.");
            }
        } catch (err) {
            console.error("Error al guardar licencia:", err);
            alert("Ocurrió un error inesperado.");
        }
    });

    // === Confirmar eliminación: validar nombre ===
    const btnsEliminar = document.querySelectorAll(".btnEliminarLicencia");
    const confirmInput = document.getElementById("confirmNombreInput");
    const confirmId = document.getElementById("confirmId");
    const btnConfirmarEliminar = document.getElementById("btnConfirmarEliminar");

    btnsEliminar.forEach(btn => {
        btn.addEventListener("click", () => {
            const nombre = btn.dataset.nombre;
            const id = btn.dataset.id;

            confirmInput.value = "";
            confirmInput.dataset.nombre = nombre;
            confirmId.value = id;
            btnConfirmarEliminar.disabled = true;
        });
    });

    confirmInput.addEventListener("input", () => {
        const esperado = confirmInput.dataset.nombre;
        btnConfirmarEliminar.disabled = confirmInput.value.trim() !== esperado;
    });

    btnConfirmarEliminar.addEventListener("click", async () => {
        const id = confirmId.value;
        const res = await fetch(`/Software/EliminarLicencia/${id}`, {
            method: "POST"
        });

        if (res.ok) {
            alert("Licencia eliminada correctamente.");
            location.reload();
        } else {
            alert("Error al eliminar la licencia.");
        }
    });

    // === Edición inline (nombre, fechas, cantidades, etc.) ===
    document.querySelectorAll("tbody tr").forEach(fila => {
        const btnEditar = fila.querySelector(".btnEditarLicencia");
        const id = fila.dataset.id;

        btnEditar?.addEventListener("click", () => {
            if (fila.classList.contains("editando")) return;
            fila.classList.add("editando");

            const campos = [
                "Nombre", "Descripcion", "OrdenCompra", "CantidadLicencias",
                "LicenciasDisponibles", "CostoTotal", "FechaAdquisicion", "FechaExpiracion"
            ];

            campos.forEach((campo, i) => {
                const celda = fila.children[i + 1]; // La primera celda es para eliminar
                const valorOriginal = celda.innerText.trim();
                const tipo = campo.toLowerCase().includes("fecha") ? "date" :
                             campo.toLowerCase().includes("costo") || campo.toLowerCase().includes("cantidad") ? "number" : "text";
                celda.innerHTML = `<input type="${tipo}" class="form-control form-control-sm" value="${valorOriginal}" />`;
            });

            const btns = fila.children[fila.children.length - 1];
            btns.innerHTML = `
                <button class="btn btn-sm btn-success btnGuardarCambios"><i class="mdi mdi-content-save"></i></button>
                <button class="btn btn-sm btn-secondary btnCancelarEdicion"><i class="mdi mdi-cancel"></i></button>`;

            btns.querySelector(".btnGuardarCambios").addEventListener("click", async () => {
                const inputs = fila.querySelectorAll("input");
                const data = {
                    id: parseInt(id),
                    nombre: inputs[0].value,
                    descripcion: inputs[1].value,
                    ordenCompra: inputs[2].value,
                    cantidadLicencias: parseInt(inputs[3].value),
                    licenciasDisponibles: parseInt(inputs[4].value),
                    costoTotal: parseFloat(inputs[5].value),
                    fechaAdquisicion: inputs[6].value,
                    fechaExpiracion: inputs[7].value
                };

                const res = await fetch("/Software/EditarSoftware", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(data)
                });

                if (res.ok) {
                    alert("Cambios guardados correctamente.");
                    location.reload();
                } else {
                    alert("Error al guardar cambios.");
                }
            });

            btns.querySelector(".btnCancelarEdicion").addEventListener("click", () => {
                location.reload();
            });
        });
    });
});
</script>
}
